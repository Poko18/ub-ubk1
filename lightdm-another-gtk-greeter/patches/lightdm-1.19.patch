diff -Naur orig/src/main.c patched/src/main.c
--- orig/src/main.c	2014-01-02 23:09:04.000000000 +0100
+++ patched/src/main.c	2016-08-02 23:58:30.753737771 +0200
@@ -1120,6 +1120,8 @@
 
 static void start_authentication(const gchar* user_name)
 {
+    GError *error = NULL;
+
     g_message("Starting authentication for user \"%s\"", user_name);
 
     set_state_value_str("greeter", "last-user", user_name);
@@ -1129,13 +1131,13 @@
 
     LightDMUser* user = NULL;
     if(g_strcmp0(user_name, USER_OTHER) == 0)
-        lightdm_greeter_authenticate(greeter.greeter, NULL);
+        lightdm_greeter_authenticate(greeter.greeter, NULL, &error);
     else if(g_strcmp0(user_name, USER_GUEST) == 0)
-        lightdm_greeter_authenticate_as_guest(greeter.greeter);
+        lightdm_greeter_authenticate_as_guest(greeter.greeter, &error);
     else
     {
         user = lightdm_user_list_get_user_by_name(lightdm_user_list_get_instance(), user_name);
-        lightdm_greeter_authenticate(greeter.greeter, user_name);
+        lightdm_greeter_authenticate(greeter.greeter, user_name, &error);
     }
     load_user_options(user);
     set_login_button_state(user && lightdm_user_get_logged_in(user));
@@ -1145,13 +1147,15 @@
 
 static void cancel_authentication(void)
 {
+    GError *error = NULL;
+
     g_message("Cancelling authentication for current user");
 
     greeter.state.cancelling = FALSE;
     if(lightdm_greeter_get_in_authentication(greeter.greeter))
     {
         greeter.state.cancelling = TRUE;
-        lightdm_greeter_cancel_authentication(greeter.greeter);
+        lightdm_greeter_cancel_authentication(greeter.greeter, &error);
         set_message_text(NULL);
     }
 
@@ -1168,12 +1172,14 @@
 
 static void start_session(void)
 {
+	GError *error = NULL;
+
     g_message("Starting session for authenticated user");
 
     gchar* language = get_language();
     if(language)
     {
-        lightdm_greeter_set_language(greeter.greeter, language);
+        lightdm_greeter_set_language(greeter.greeter, language, &error);
         g_free(language);
     }
 
@@ -1404,6 +1410,8 @@
 
 static void on_authentication_complete(LightDMGreeter* greeter_ptr)
 {
+	GError *error = NULL;
+
     g_debug("LightDM signal: authentication-complete");
     gtk_entry_set_text(GTK_ENTRY(greeter.ui.prompt_entry), "");
 
@@ -1430,7 +1438,7 @@
         if(greeter.state.prompted)
         {
             set_message_text(_("Incorrect password, please try again"));
-            lightdm_greeter_authenticate(greeter.greeter, lightdm_greeter_get_authentication_user(greeter.greeter));
+            lightdm_greeter_authenticate(greeter.greeter, lightdm_greeter_get_authentication_user(greeter.greeter), &error);
         }
         else
         {
@@ -1445,8 +1453,10 @@
 
 static void on_autologin_timer_expired(LightDMGreeter* greeter_ptr)
 {
+	GError *error = NULL;
+	
     g_debug("LightDM signal: autologin-timer-expired");
-    lightdm_greeter_authenticate_autologin(greeter_ptr);
+    lightdm_greeter_authenticate_autologin(greeter_ptr, &error);
 }
 
 static void on_user_added(LightDMUserList* user_list,
@@ -1494,8 +1504,9 @@
         start_session();
     else if(lightdm_greeter_get_in_authentication(greeter.greeter))
     {
+		GError *error = NULL;
         const gchar* text = gtk_entry_get_text(GTK_ENTRY(greeter.ui.prompt_entry));
-        lightdm_greeter_respond(greeter.greeter, text);
+        lightdm_greeter_respond(greeter.greeter, text, &error);
         gtk_widget_show(greeter.ui.cancel_box);
         if(get_user_type() == USER_TYPE_OTHER  && gtk_entry_get_visibility(GTK_ENTRY(greeter.ui.prompt_entry)))
         {
