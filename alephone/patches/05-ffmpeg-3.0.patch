diff -Naur orig/Source_Files/FFmpeg/Movie.cpp mod/Source_Files/FFmpeg/Movie.cpp
--- orig/Source_Files/FFmpeg/Movie.cpp	2016-04-22 14:28:22.000000000 +0200
+++ mod/Source_Files/FFmpeg/Movie.cpp	2016-04-22 14:40:45.230813155 +0200
@@ -86,12 +86,6 @@
 #endif
 
 // FFmpeg compatibility
-#ifndef AV_CODEC_ID_VP8
-#define AV_CODEC_ID_VP8 CODEC_ID_VP8
-#endif
-#ifndef AV_CODEC_ID_VORBIS
-#define AV_CODEC_ID_VORBIS CODEC_ID_VORBIS
-#endif
 
 
 // shamelessly stolen from SDL 2.0
@@ -425,7 +419,7 @@
         video_stream->codec->width = view_rect.w;
         video_stream->codec->height = view_rect.h;
         video_stream->codec->time_base = (AVRational){1, TICKS_PER_SECOND};
-        video_stream->codec->pix_fmt = PIX_FMT_YUV420P;
+        video_stream->codec->pix_fmt = AV_PIX_FMT_YUV420P;
         video_stream->codec->flags |= CODEC_FLAG_CLOSED_GOP;
         video_stream->codec->thread_count = get_cpu_count();
         
@@ -554,7 +548,7 @@
     // initialize conversion context
     if (success)
     {
-        av->sws_ctx = sws_getContext(temp_surface->w, temp_surface->h, PIX_FMT_RGB32,
+        av->sws_ctx = sws_getContext(temp_surface->w, temp_surface->h, AV_PIX_FMT_RGB32,
                                      video_stream->codec->width,
                                      video_stream->codec->height,
                                      video_stream->codec->pix_fmt,
diff -Naur orig/Source_Files/FFmpeg/SDL_ffmpeg.c mod/Source_Files/FFmpeg/SDL_ffmpeg.c
--- orig/Source_Files/FFmpeg/SDL_ffmpeg.c	2016-04-22 14:19:56.320854508 +0200
+++ mod/Source_Files/FFmpeg/SDL_ffmpeg.c	2016-04-22 14:35:49.955338073 +0200
@@ -49,33 +49,6 @@
 #endif
 
 // FFmpeg compatibility
-#ifndef AV_CODEC_ID_MPEG1VIDEO
-#define AV_CODEC_ID_MPEG1VIDEO CODEC_ID_MPEG1VIDEO
-#endif
-#ifndef AV_CODEC_ID_MPEG2VIDEO
-#define AV_CODEC_ID_MPEG2VIDEO CODEC_ID_MPEG2VIDEO
-#endif
-#ifndef AV_CODEC_ID_MP2
-#define AV_CODEC_ID_MP2 CODEC_ID_MP2
-#endif
-#ifndef AV_CODEC_ID_DVVIDEO
-#define AV_CODEC_ID_DVVIDEO CODEC_ID_DVVIDEO
-#endif
-#ifndef AV_CODEC_ID_DVAUDIO
-#define AV_CODEC_ID_DVAUDIO CODEC_ID_DVAUDIO
-#endif
-#ifndef AV_CODEC_ID_PCM_S16LE
-#define AV_CODEC_ID_PCM_S16LE CODEC_ID_PCM_S16LE
-#endif
-#ifndef AV_CODEC_ID_PCM_S16BE
-#define AV_CODEC_ID_PCM_S16BE CODEC_ID_PCM_S16BE
-#endif
-#ifndef AV_CODEC_ID_PCM_U16LE
-#define AV_CODEC_ID_PCM_U16LE CODEC_ID_PCM_U16LE
-#endif
-#ifndef AV_CODEC_ID_PCM_U16BE
-#define AV_CODEC_ID_PCM_U16BE CODEC_ID_PCM_U16BE
-#endif
 #ifndef AVCODEC_MAX_AUDIO_FRAME_SIZE
 #define AVCODEC_MAX_AUDIO_FRAME_SIZE 192000
 #endif
@@ -113,7 +86,7 @@
  *  Provide a fast way to get the correct context.
  *  \returns The context matching the input values.
  */
-struct SwsContext* getContext( SDL_ffmpegConversionContext **context, int inWidth, int inHeight, enum PixelFormat inFormat, int outWidth, int outHeight, enum PixelFormat outFormat )
+struct SwsContext* getContext( SDL_ffmpegConversionContext **context, int inWidth, int inHeight, enum AVPixelFormat inFormat, int outWidth, int outHeight, enum AVPixelFormat outFormat )
 {
     SDL_ffmpegConversionContext *ctx = *context;
 
@@ -648,7 +621,7 @@
     {
         case 24:
             sws_scale( getContext( &file->videoStream->conversionContext,
-                                   frame->w, frame->h, PIX_FMT_RGB24,
+                                   frame->w, frame->h, AV_PIX_FMT_RGB24,
                                    file->videoStream->_ffmpeg->codec->width,
                                    file->videoStream->_ffmpeg->codec->height,
                                    file->videoStream->_ffmpeg->codec->pix_fmt ),
@@ -661,7 +634,7 @@
             break;
         case 32:
             sws_scale( getContext( &file->videoStream->conversionContext,
-                                   frame->w, frame->h, PIX_FMT_BGR32,
+                                   frame->w, frame->h, AV_PIX_FMT_BGR32,
                                    file->videoStream->_ffmpeg->codec->width,
                                    file->videoStream->_ffmpeg->codec->height,
                                    file->videoStream->_ffmpeg->codec->pix_fmt ),
@@ -1630,7 +1603,7 @@
     stream->codec->gop_size = 12;
 
     /* set pixel format */
-    stream->codec->pix_fmt = PIX_FMT_YUV420P;
+    stream->codec->pix_fmt = AV_PIX_FMT_YUV420P;
 
     /* set mpeg2 codec parameters */
     if ( stream->codec->codec_id == AV_CODEC_ID_MPEG2VIDEO )
@@ -2248,7 +2221,7 @@
                                    file->videoStream->_ffmpeg->codec->height,
                                    file->videoStream->_ffmpeg->codec->pix_fmt,
                                    frame->overlay->w, frame->overlay->h,
-                                   PIX_FMT_YUYV422 ),
+                                   AV_PIX_FMT_YUYV422 ),
                        ( const uint8_t* const* )file->videoStream->decodeFrame->data,
                        file->videoStream->decodeFrame->linesize,
                        0,
@@ -2270,7 +2243,7 @@
                                            file->videoStream->_ffmpeg->codec->height,
                                            file->videoStream->_ffmpeg->codec->pix_fmt,
                                            frame->surface->w, frame->surface->h,
-                                           PIX_FMT_RGB32 ),
+                                           AV_PIX_FMT_RGB32 ),
                                ( const uint8_t* const* )file->videoStream->decodeFrame->data,
                                file->videoStream->decodeFrame->linesize,
                                0,
@@ -2284,7 +2257,7 @@
                                            file->videoStream->_ffmpeg->codec->height,
                                            file->videoStream->_ffmpeg->codec->pix_fmt,
                                            frame->surface->w, frame->surface->h,
-                                           PIX_FMT_RGB24 ),
+                                           AV_PIX_FMT_RGB24 ),
                                ( const uint8_t* const* )file->videoStream->decodeFrame->data,
                                file->videoStream->decodeFrame->linesize,
                                0,
